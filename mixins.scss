//Text inputs
@mixin text-inputs-style($with-textarea: true) {
    @if $with-textarea {
        input[type="text"],
        input[type="search"],
        input[type="email"],
        input[type="tel"],
        input[type="url"],
        input[type="number"],
        input[type="password"],
        input[type="date"],
        input[type="time"],
        input[type="datetime"],
        input[type="datetime-local"],
        input[type="month"],
        input[type="week"],
        input[type="color"],
        textarea {
            @content;
        }
    } @else {
        input[type="text"],
        input[type="search"],
        input[type="email"],
        input[type="tel"],
        input[type="url"],
        input[type="number"],
        input[type="password"],
        input[type="date"],
        input[type="time"],
        input[type="datetime"],
        input[type="datetime-local"],
        input[type="month"],
        input[type="week"],
        input[type="color"] {
            @content;
        }
    }
}

@mixin class-text-inputs-style($class, $with-textarea: true) {
    @include text-inputs-style($with-textarea) {
        &.#{$class} {
            @content;
        }
    }
}

//Palceholder
@mixin placeholder-style() {
    @if $text-inputs-placeholder-css3-use-prefixes {
        @if index($text-inputs-placeholder-browsers-prefixes, webkit) {
            &::-webkit-input-placeholder {
                @content;
            }
        }
        @if index($text-inputs-placeholder-browsers-prefixes, moz) {
            &::-moz-placeholder {
                @content;
            }
        }
        @if index($text-inputs-placeholder-browsers-prefixes, ms) {
            &:-ms-input-placeholder {
                @content;
            }
        }
        @if index($text-inputs-placeholder-browsers-prefixes, moz) {
            &:-moz-placeholder {
                @content;
            }
        }
    }
    &::placeholder {
        @content;
    }
}

//Colors
//Text inputs
//@mixin text-inputs-extra-colors-propertys($colors-map) {} //Create this mixin before import module when you want add some special colors style for element
//@mixin text-inputs-focus-extra-colors-propertys($colors-map) {} //Create this mixin before import module when you want add some special colors style for element
//@mixin text-inputs-disabled-extra-colors-propertys($colors-map) {} //Create this mixin before import module when you want add some special colors style for element
//@mixin text-inputs-placeholder-extra-colors-propertys($colors-map) {} //Create this mixin before import module when you want add some special colors style for element

@mixin text-inputs-colors-propertys($colors-map) {
    @if is-map($colors-map) {
        @include property-from-map($colors-map, outline-color);
        @include property-from-map($colors-map, border-color);
        @include property-from-map($colors-map, background-color);
        @include property-from-map($colors-map, color);
        @if mixin-exists(text-inputs-extra-colors-propertys) {
            @include text-inputs-extra-colors-propertys($colors-map);
        }

        &:focus {
            @include property-from-map($colors-map, outline-color, focus-outline-color);
            @include property-from-map($colors-map, border-color, focus-border-color);
            @include property-from-map($colors-map, background-color, focus-background-color);
            @include property-from-map($colors-map, color, focus-color);
            @if mixin-exists(text-inputs-focus-extra-colors-propertys) {
                @include text-inputs-focus-extra-colors-propertys($colors-map);
            }
        }

        &[disabled] {
            @include property-from-map($colors-map, border-color, disabled-border-color);
            @include property-from-map($colors-map, background-color, disabled-background-color);
            @include property-from-map($colors-map, color, disabled-color);
            @if mixin-exists(text-inputs-disabled-extra-colors-propertys) {
                @include text-inputs-disabled-extra-colors-propertys($colors-map);
            }
        }

        @include placeholder-style() {
            @include property-from-map($colors-map, color, placeholder-color);
            @if mixin-exists(text-inputs-placeholder-extra-colors-propertys) {
                @include text-inputs-placeholder-extra-colors-propertys($colors-map);
            }
        }
    }
}

@mixin text-inputs-colors($colors-map) {
    @include text-inputs-style() {
        @include text-inputs-colors-propertys($colors-map);
    }
}

@mixin class-text-inputs-colors($class, $colors-map) {
    @include class-text-inputs-style($class) {
        @include text-inputs-colors-propertys($colors-map);
    }
}

//Datalist
//@mixin datalist-extra-colors-propertys($colors-map) {} //Create this mixin before import module when you want add some special colors style for element

@mixin datalist-colors-propertys($colors-map) {
    @include property-from-map($colors-map, border-color);
    @if mixin-exists(datalist-extra-colors-propertys) {
        @include datalist-extra-colors-propertys($colors-map);
    }
}

@mixin datalist-colors($colors-map) {
    datalist {
        @include datalist-colors-propertys($colors-map);
    }
}

@mixin class-datalist-colors($class, $colors-map) {
    datalist.#{$class} {
        @include datalist-colors-propertys($colors-map);
    }
}