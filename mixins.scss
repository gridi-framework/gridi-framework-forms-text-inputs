//Text inputs
@mixin text-inputs-style($with-textarea: true) {
    @if $with-textarea {
        input[type="text"],
        input[type="search"],
        input[type="email"],
        input[type="tel"],
        input[type="url"],
        input[type="number"],
        input[type="password"],
        input[type="date"],
        input[type="time"],
        input[type="datetime"],
        input[type="datetime-local"],
        input[type="month"],
        input[type="week"],
        input[type="color"],
        textarea {
            @content;
        }
    } @else {
        input[type="text"],
        input[type="search"],
        input[type="email"],
        input[type="tel"],
        input[type="url"],
        input[type="number"],
        input[type="password"],
        input[type="date"],
        input[type="time"],
        input[type="datetime"],
        input[type="datetime-local"],
        input[type="month"],
        input[type="week"],
        input[type="color"] {
            @content;
        }
    }
}

@mixin class-text-inputs-style($class, $with-textarea: true) {
    @include text-inputs-style($with-textarea) {
        &.#{$class} {
            @content;
        }
    }
}

//Disabled text inputs
@mixin text-inputs-disabled-style($with-textarea: true) {
    @include text-inputs-style($with-textarea) {
        &[disabled] {
            @content;
        }
    }
}

@mixin class-text-inputs-disabled-style($class, $with-textarea: true) {
    @include class-text-inputs-style($class, $with-textarea) {
        &[disabled] {
            @content;
        }
    }
}

//Colors
@mixin include-text-inputs-colors($colors-map) {
    @if map-has-key($colors-map, border-color) and map-get($colors-map, border-color) {
        border-color: map-get($colors-map, border-color);
    }
    @if map-has-key($colors-map, background) and map-get($colors-map, background) {
        background: map-get($colors-map, background);
    }
    @if map-has-key($colors-map, color) and map-get($colors-map, color) {
        color: map-get($colors-map, color);
    }

    &:focus {
        @if map-has-key($colors-map, focus-border-color) and map-get($colors-map, focus-border-color) {
            border-color: map-get($colors-map, focus-border-color);
        }
        @if map-has-key($colors-map, focus-background) and map-get($colors-map, focus-background) {
            background: map-get($colors-map, focus-background);
        }
        @if map-has-key($colors-map, focus-color) and map-get($colors-map, focus-color) {
            color: map-get($colors-map, focus-color);
        }
    }
}

//Placeholder
@mixin include-placeholder-color($colors-map) {
    @if map-has-key($colors-map, color) and map-get($colors-map, color) {
        &::-webkit-input-placeholder {
            color: map-get($colors-map, color);
        }
        &::-moz-placeholder { /* Firefox 19+ */
            color: map-get($colors-map, color);
        }
        &:-ms-input-placeholder { /* IE 10+ */
            color: map-get($colors-map, color);
        }
        &:-moz-placeholder { /* Firefox 18- */
            color: map-get($colors-map, color);
        }
        &::placeholder {
            color: map-get($colors-map, color);
        }
    }
}

@mixin placeholder-color($colors-map) {
    @include text-inputs-style() {
        @include include-placeholder-color($colors-map);
    }
}

@mixin class-placeholder-color($class, $colors-map) {
    @include text-inputs-style() {
        &.#{$class} {
            @include include-placeholder-color($colors-map);
        }
    }
}

//Datalist
@mixin include-datalist-colors($colors-map) {
    @if map-has-key($colors-map, border-color) and map-get($colors-map, border-color) {
        border-color: map-get($colors-map, border-color);
    }
}

@mixin datalist-colors($colors-map) {
    datalist {
        @include include-datalist-colors($colors-map);
    }
}

@mixin class-datalist-colors($class, $colors-map) {
    datalist.#{$class} {
        @include include-datalist-colors($colors-map);
    }
}
